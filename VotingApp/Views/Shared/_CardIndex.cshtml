@using Humanizer;
@using Microsoft.AspNetCore.Identity;
@using VotingApp.Data;
@model IEnumerable<VotingApp.Models.Idea>
@inject UserManager<Member> _userManager;
@inject SignInManager<Member> _signInManager;

@inject ApplicationDbContext _context;


@{
    // If Available, Display Message Banner(passed from result of controller)
    var displayMessage = "";
    if (TempData.ContainsKey("DisplayMessage"))
    {
        displayMessage = TempData["DisplayMessage"].ToString();
    }

    // text colors for moderated Ideas
    string textModerated = "text-danger opacity-50";
    string textBlack = "text-black";
    
    // get list of categories
    var category = _context.Category.ToList();



}

<!-- Filters START -->
<div class="row d-flex">
    <div class="CATEGORY col-lg-3 mb-3 mb-lg-0">
        <select name="category" class="form-select border-0" aria-label=".form-select-sm example">
            <option selected>Categories</option>
            @{ // display list of categories
                foreach (var catName in category)
                {
                    <option value="@catName.Id">@catName.Name</option>
                }
            }
        </select>
    </div>
    <div class="FILTER col-lg-3 mb-3 mb-lg-0">
        <select name="filter" class="form-select border-0" aria-label=".form-select-sm example">
            <option selected>Filter</option>
            <option value="1">One</option>
            <option value="2">Two</option>
            <option value="3">Three</option>
        </select>
    </div>
    <div class="SEARCH col input-group mb-3 mb-lg-3">
        <div class="nav-item w-100">
            <form asp-action="search" asp-controller="home" class="position-relative">
                <input class="form-control" name="searchTerm" type="search" placeholder="Find an idea" aria-label="Search">
                <button class="bg-transparent p-2 position-absolute top-50 end-0 translate-middle-y border-0 text-primary-hover text-reset align-items-center" type="submit">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                        <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                    </svg>
                </button>
            </form>
        </div>
    </div>
</div>
<!-- Filters END -->
<!-- Display Message START-->
@{
    // Placeholder for Displaying Message Banner
    if (displayMessage != "")
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            @displayMessage
        </div>
    }
}
<!-- Display Message END-->
@{
    foreach (var idea in Model)
    {
        // get vote count
        var voteCount = idea.Votes.Where(vote => vote.IdeaId == idea.Id).Count();

        //get comment count
        var commentCount = idea.Comments.Where(c => c.IdeaId == idea.Id).Count();

        var ideaOwner = await _userManager.FindByIdAsync(idea.MemberId);

        double timestamp = idea.CreatedDate.ToOADate();
        var timeSpan = DateTime.FromOADate(timestamp).AddMicroseconds(-timestamp).Humanize();

        <!--Index Card START -->
        <div class="card mb-3 border-0 rounded-5 shadow">
            <div class="row g-0">
                <div class="VOTE-STATS d-none d-md-none d-xl-block col-md-2 border-end">
                    <div class="card-body text-center">
                        <h5 class="card-title">@voteCount</h5>
                        <p class="card-text">Votes</p>

                        @{
                            // display button based on whether the user voted on the Idea or not
                            var getMemberVote = _context.Vote
                            .Where(v => v.IdeaId == idea.Id && v.MemberId == _userManager.GetUserId(User))
                            .ToList();


                            if (getMemberVote.Count == 0)
                            {
                                <form asp-action="AddVote" asp-controller="ideas">
                                    <input type="hidden" name="Id" value="@idea.Id" />
                                    <input type="hidden" name="Title" value="@idea.Title" />
                                    <input type="hidden" name="CategoryId" value="@idea.Category.Id" />
                                    <input type="hidden" name="Description" value="@idea.Description" />
                                    <input type="hidden" name="MemberId" value="@_userManager.GetUserId(User)" />
                                    <button type="submit" class="vote border-0 rounded-5">Vote</button>
                                </form>
                            }
                            if (getMemberVote.Count != 0)
                            {
                                <form asp-action="RemoveVote" asp-controller="ideas">
                                    <input type="hidden" name="Id" value="@idea.Id" />
                                    <input type="hidden" name="Title" value="@idea.Title" />
                                    <input type="hidden" name="CategoryId" value="@idea.Category.Id" />
                                    <input type="hidden" name="Description" value="@idea.Description" />
                                    <input type="hidden" name="MemberId" value="@_userManager.GetUserId(User)" />
                                    <button type="submit" class="remove-vote border-0 rounded-5 text-white">Remove Vote</button>
                                </form>
                            }
                        }

                    </div>
                </div>
                <div class="AVATAR-IMAGE col-1 p-3">
                    <img src="~/uploads/avatars/@ideaOwner.AvatarFileName" alt="avatar" class="avatar rounded-3" />
                </div>
                <div class="CARD-DETAILS col-md-9">
                    <div class="card-body mb-3">
                        <h5 class="card-title"><a class="text-decoration-none text-black" asp-action="Details" asp-route-id="@idea.Id">@idea.Title</a></h5>
                        @{
                            if (idea.Description.Length >= 261)
                            {
                                <p class="card-text">
                                    <a class="text-decoration-none @if(idea.IsModerated) {
                            @textModerated
 } else {
                            @textBlack
 }"
                       asp-action="Details" asp-route-id="@idea.Id">@idea.Description.Substring(0,260)...</a>
                                </p>
                            }
                            else
                            {
                                <p class="card-text">
                                    <a class="text-decoration-none @if(idea.IsModerated) {
                              @textModerated
 } else {
                            @textBlack
 }"
                       asp-action="Details" asp-route-id="@idea.Id">@idea.Description</a>
                                </p>
                            }
                        }
                    </div>
                    <div class="d-flex bd-highlight mb-3">
                        <div class="TIMESTAMP px-3 bd-highlight text-secondary opacity-50">@timeSpan</div>
                        <div class="CATEGORY-NAME px-3 bd-highlight opacity-75"><a class="text-decoration-none text-secondary" href="~/category/@idea.Category.Name">@idea.Category.Name</a></div>
                        <div class="COMMENT-COUNT bd-highlight"><a class="text-secondary text-decoration-none opacity-75" asp-action="Details" asp-route-id="@idea.Id">@commentCount Comments</a></div>
                        @{
                            if (idea.CurrentStatus == "open")
                            {
                                <div class="TICKET-STATUS ms-auto bd-highlight pe-2"><button class="status-open border-0 rounded-5">Open</button></div>
                            }
                            if (idea.CurrentStatus == "considering")
                            {
                                <div class="TICKET-STATUS ms-auto bd-highlight pe-2"><button class="status-considering border-0 rounded-5">Considering</button></div>
                            }
                            if (idea.CurrentStatus == "in-progress")
                            {
                                <div class="TICKET-STATUS ms-auto bd-highlight pe-2"><button class="status-in-progress border-0 rounded-5 text-white">In Progress</button></div>
                            }
                            if (idea.CurrentStatus == "implemented")
                            {
                                <div class="TICKET-STATUS ms-auto bd-highlight pe-2"><button class="status-implemented border-0 rounded-5 text-white">Implemented</button></div>
                            }
                            if (idea.CurrentStatus == "closed")
                            {
                                <div class="TICKET-STATUS ms-auto bd-highlight pe-2"><button class="status-closed border-0 rounded-5 text-white">Closed</button></div>
                            }
                        }
                        @if (_signInManager.IsSignedIn(User))
                        {
                            <div class="bd-highlight pe-3 dropdown">
                                <button class="three-dots border-0 rounded-5" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
                                        <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z" />
                                    </svg>
                                </button>
                                <ul class="dropdown-menu border-0 shadow" aria-labelledby="dropdownMenuButton1">
                                    <li><a class="dropdown-item" href="#">Mark as Spam</a></li>
                                    @{
                                        // get user role of signed in User
                                        var getUserRole = await _userManager.GetUserAsync(User);
                                        var userRole = getUserRole.UserRole;
                                        if (userRole == "admin")
                                        {
                                            <li><button type="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#moderateModal-@idea.Id">Moderate Post</button></li>
                                        }
                                        if (idea.MemberId == _userManager.GetUserId(User))
                                        {
                                            <li><button type="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#deleteModal-@idea.Id">Delete Post</button></li>
                                        }
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- Index Card END -->
        <!-- Delete Modal START -->
        <div class="modal" id="deleteModal-@idea.Id" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">Delete post?</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete your post? You can't undo this.
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <form asp-action="DeleteIdea" asp-controller="ideas">
                            <input type="hidden" name="Id" value="@idea.Id" />
                            <button type="submit" class="btn btn-danger">Delete post</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- Delete Model END -->
        <!-- Moderate Modal START -->
        <form asp-action="ModerateIdea" asp-controller="ideas">
            <input type="hidden" name="Id" value="@idea.Id" />
            <input type="hidden" name="MemberId" value="@idea.MemberId" />
            <input type="hidden" name="CategoryId" value="@idea.CategoryId" />
            <input type="hidden" name="Title" value="@idea.Title" />

            <div class="modal" id="moderateModal-@idea.Id" tabindex="-1" aria-labelledby="moderateModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5">Moderate post?</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <textarea class="form-control" name="Description">Content has been removed by an Admin.</textarea>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-warning">Update post</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <!-- Moderate Model END -->
    }
}

