@using Humanizer;
@using Microsoft.AspNetCore.Identity;
@using VotingApp.Data;
@model VotingApp.Models.Idea
@inject UserManager<Member> _userManager;
@inject SignInManager<Member> _signInManager;
@inject ApplicationDbContext _context;


@{
    // convert timespan to human readable
    double timestamp = Model.CreatedDate.ToOADate();
    var timeSpan = DateTime.FromOADate(timestamp).AddMicroseconds(-timestamp).Humanize();

    // set text colors for moderated posts
    string textModerated = "text-danger opacity-50";
    string textBlack = "text-black";

    // get vote count
    var voteCount = Model.Votes.Where(vote => vote.IdeaId == Model.Id).Count();

    // get comment count
    var commentCount = Model.Comments.Where(c => c.IdeaId == Model.Id).Count();

    // If Available, Display Message Banner(passed from result of controller)
    var displayMessage = "";
    if (TempData.ContainsKey("DisplayMessage"))
    {
        displayMessage = TempData["DisplayMessage"].ToString();
    }
}

<!-- Breadcrumbs START-->
<div class="d-flex align-items-center fw-bold text-black mb-3">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-left me-2" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" />
    </svg>
    <a href="~/" class="fw-bold text-decoration-none text-black">All Ideas</a><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-left me-2 ms-2" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" />
    </svg>
    @Model.Title
</div>
<!-- Breadcrumbs END-->

@{ // displays notifications after certain actions
    if (displayMessage != "")
    {
        <!-- Display Message START-->
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            @displayMessage
        </div>
        <!-- Display Message END--> 
    }
}

<!-- Card START -->
<div class="card-single mb-3 border-0 rounded-5 shadow-sm">
    <div class="row g-0">
        <div class="AVATAR-IMAGE col-md-1 p-3 ms-2">
            <img src="~/uploads/avatars/@Model.Member.AvatarFileName" alt="avatar" class="avatar rounded-3" />
        </div>
        <div class="CARD-DETAILS col ms-1">
            <div class="card-body mb-3">
                <h5 class="card-title">@Model.Title</h5>
                <p class="card-text @if(Model.IsModerated) { @textModerated } else { @textBlack }">@Model.Description</p>
            </div>
            <div class="d-flex bd-highlight mb-3">
                <div class="TIMESTAMP ps-3 bd-highlight text-secondary fw-bold">@Model.Member.FirstName</div>
                <div class="TIMESTAMP px-3 bd-highlight text-secondary opacity-50">@timeSpan</div>
                <div class="CATEGORY-NAME px-3 bd-highlight text-secondary opacity-50">@Model.Category.Name</div>
                <div class="COMMENT-COUNT bd-highlight text-dark">@commentCount Comments</div>
                    @{ // checks status of posts and displays the colors accordingly
                        if (Model.CurrentStatus == "open")
                        {
                            <div class="TICKET-STATUS ms-auto bd-highlight pe-2"><button class="status-open border-0 rounded-5">Open</button></div>
                        }
                        if (Model.CurrentStatus == "considering")
                        {
                            <div class="TICKET-STATUS ms-auto bd-highlight pe-2"><button class="status-considering border-0 rounded-5">Considering</button></div>
                        }
                        if (Model.CurrentStatus == "in-progress")
                        {
                            <div class="TICKET-STATUS ms-auto bd-highlight pe-2"><button class="status-in-progress border-0 rounded-5 text-white">In Progress</button></div>
                        }
                        if (Model.CurrentStatus == "implemented")
                        {
                            <div class="TICKET-STATUS ms-auto bd-highlight pe-2"><button class="status-implemented border-0 rounded-5 text-white">Implemented</button></div>
                        }
                        if (Model.CurrentStatus == "closed")
                        {
                            <div class="TICKET-STATUS ms-auto bd-highlight pe-2"><button class="status-closed border-0 rounded-5 text-white">Closed</button></div>
                        }
                    }
                    @if(_signInManager.IsSignedIn(User))
                    {                        
                        <div class="bd-highlight pe-3 dropdown">
                            <button class="three-dots border-0 rounded-5" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
                                    <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z" />
                                </svg>
                            </button>
                            <ul class="dropdown-menu border-0 shadow" aria-labelledby="dropdownMenuButton1">
                                <li><a class="dropdown-item" href="#">Mark as Spam</a></li>
                                @{  // get role of signed in User
                                    var getUserRole = await _userManager.GetUserAsync(User);
                                    string userRole = getUserRole.UserRole;

                                    if (userRole == "admin")
                                    {
                                        <li><button type="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#moderateModal-@Model.Id">Moderate Post</button></li>
                                    }                            
                                    if (Model.MemberId == _userManager.GetUserId(User))
                                    {
                                        <li><button type="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#deleteModal-@Model.Id">Delete Post</button></li>
                                    }
                                }
                            </ul>
                        </div>
                    }
            </div>
        </div>
    </div>
</div>
<!-- Card END -->

<!-- Buttons START-->
<div class="d-flex bd-highlight mb-3">
    <div class="REPLY-BUTTON bd-highlight dropdown">
        <button class="blue-button text-white border-0 rounded-5 " href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Reply
        </button>
        <ul class="dropdown-menu border-0 rounded-5 shadow-sm mt-1">
            <li style="width:450px" class="border-0">
                <form asp-action="AddComment" asp-controller="ideas">
                    <input type="hidden" name="MemberId" value="@_userManager.GetUserId(User)" />
                    <input type="hidden" name="IdeaId" value="@Model.Id"/>
                    <div class="modal-body rounded-5 mb-0">
                            <div class="mb-0">
                                <textarea name="Body" class="form-control-idea border-0 bg-gray-100" rows="4"></textarea>
                            </div>
                    </div>
                    <div class="d-flex border-0 ms-3 mb-3 mt-2">
                        <button type="submit" class="blue-button border-0 rounded-5 text-white col-5 me-3">Post Comment</button>
                        <button type="button" class="grey-button border-0 rounded-5 col-4 me-auto" data-bs-dismiss="modal">Action</button>
                    </div>
                 </form>
            </li>
        </ul>
    </div>
    <div class="SET-STATUS px-3 bd-highlight dropdown">
        <button class="grey-button border-0 rounded-5 dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Set Status
        </button>
        <ul class="dropdown-menu border-0 rounded-5 shadow-sm mt-1">
            <li style="width:350px" class="border-0 p-3 pb-0">
                <div class="form-check">
                    <label class="form-check-label text-muted fw-bold">
                        <input class="form-check-input " type="radio" name="flexRadioDefault" checked>
                        Open
                    </label>
                </div>
                <div class="form-check">
                    <label class="form-check-label text-warning fw-bold">
                        <input class="form-check-input " type="radio" name="flexRadioDefault">
                        Considering
                    </label>
                </div>
                <div class="form-check">
                    <label class="form-check-label text-primary fw-bold">
                        <input class="form-check-input " type="radio" name="flexRadioDefault">
                        In Progress
                    </label>
                </div>
                <div class="form-check">
                    <label class="form-check-label  text-success fw-bold">
                        <input class="form-check-input" type="radio" name="flexRadioDefault">
                        Implemented
                    </label>
                </div>
                <div class="form-check">
                    <label class="form-check-label text-danger fw-bold">
                        <input class="form-check-input " type="radio" name="flexRadioDefault">
                        Closed
                    </label>
                </div>
                <div class="modal-body rounded-5 p-0 pt-3">
                    <form>
                        <div class="mb-0">
                            <textarea class="form-control-idea border-0 bg-gray-100" rows="4" placeholder="Add an update comment (optional)"></textarea>
                        </div>
                    </form>
                </div>
                <div class="d-flex border-0 mb-3 mt-3">
                    <button type="button" class="grey-button border-0 rounded-5 col me-3">Attach</button>
                    <button type="button" class="blue-button border-0 rounded-5 text-white col me-auto" data-bs-dismiss="modal">Update</button>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                    <label class="form-check-label" for="flexCheckDefault">
                        Notify all voters
                    </label>
                </div>


            </li>
        </ul>
    </div>


    <div class="VOTE-COUNT ms-auto bd-highlight me-3">
        <div class="text-center border-0 bg-white px-2 py-1 rounded-5">
            <div><h6 class="mb-0 fw-bold">@voteCount</h6></div>
            <div><p class="mb-0 small text-secondary">Votes</p></div>
        </div>
    </div>
    <div class="VOTE-BUTTON bd-highlight dropdown">
         @{
            // display button based on whether the user voted on the Idea or not
            var getMemberVote = _context.Vote
                .Where(v => v.IdeaId == Model.Id && v.MemberId == _userManager.GetUserId(User))
                .ToList();

            if(getMemberVote.Count == 0)
            {
                <form asp-action ="AddVote" asp-controller="ideas">
                    <input type="hidden" name="Id" value="@Model.Id" />
                    <input type="hidden" name="Title" value="@Model.Title" />
                    <input type="hidden" name="CategoryId" value="@Model.Category.Id" />
                    <input type="hidden" name="Description" value="@Model.Description" />
                <input type="hidden" name="MemberId" value="@_userManager.GetUserId(User)"/>
                <button type="submit" class="vote-button-details border-0 rounded-5">Vote</button>
                </form>
            }
            if(getMemberVote.Count != 0)
            {
                <form asp-action="RemoveVote" asp-controller="ideas">
                    <input type="hidden" name="Id" value="@Model.Id" />
                    <input type="hidden" name="Title" value="@Model.Title" />
                    <input type="hidden" name="CategoryId" value="@Model.Category.Id" />
                    <input type="hidden" name="Description" value="@Model.Description" />
                    <input type="hidden" name="MemberId" value="@_userManager.GetUserId(User)" />
                    <button type="submit" class="remove-vote-button-details border-0 rounded-5 text-white">Remove Vote</button>
                </form>
            }
        }


    </div>
</div>
<!-- Buttons END -->

<!-- Comment Container START -->
<div class="comments-container position-relative">
    <partial name="_CommentCard" />
</div>
<!-- Comment Container END -->

<!-- Delete Modal START -->
<div class="modal" id="deleteModal-@Model.Id" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Delete post?</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete your post? You can't undo this.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

                <form asp-action="DeleteIdea" asp-controller="ideas">
                    <input type="hidden" name="Id" value="@Model.Id" />
                    <button type="submit" class="btn btn-danger">Delete post</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Delete Model END -->

<!-- Moderate Modal START -->
<form asp-action="ModerateIdea" asp-controller="ideas">
    <input type="hidden" name="Id" value="@Model.Id" />
    <input type="hidden" name="MemberId" value="@Model.MemberId" />
    <input type="hidden" name="CategoryId" value="@Model.CategoryId" />
    <input type="hidden" name="Title" value="@Model.Title" />

    <div class="modal" id="moderateModal-@Model.Id" tabindex="-1" aria-labelledby="moderateModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5">Moderate post?</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <textarea class="form-control" name="Description" >Content has been removed by an Admin.</textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-warning">Update post</button>
                </div>
            </div>
        </div>
    </div>
</form>
<!-- Moderate Model END -->